image: alpine:latest

stages:
  - build
  - deploy

Deploy Security Rules:
  image: ubuntu:latest
  stage: deploy
  before_script:
    - apt-get update && apt-get install -y curl sudo
    - curl -sL https://firebase.tools | bash
    - cd firebase
  script:
    - firebase --token $FIREBASE_TOKEN deploy --only storage
    - firebase --token $FIREBASE_TOKEN deploy --only firestore:rules
  rules:
    - changes:
        - firebase/**/*

Update Firestore Public Data:
  image: node:alpine
  stage: deploy
  before_script:
    - mkdir importer/import
    - cp public/data/*.json importer/import
    - cat $FIREBASE_SERVICE_ACCOUNT > importer/serviceAccountKey.json
    - cd importer
    - npm i
  script: npm start
  rules:
    - changes:
        - public/data/**/*

Generate Flutter App:
  image: itachi1706/flutter-alpine-android:beta
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    ANDROID_HOME: "/usr/local/android-sdk"
    APP_BUILD_VER: dogfood
  before_script:
    - flutter doctor -v
    - echo $DEBUG_KEYSTORE | base64 -d > android/app/debug.keystore
    - cat $KEY_PROPERTIES > android/key.properties
    - rm ./android/app/build.gradle
    - mv ./android/app/build.gradle.ci ./android/app/build.gradle
    - mkdir release
    - export GIT_COMMIT_COUNT="$(git rev-list --count HEAD)"
    - echo $GIT_COMMIT_COUNT
    - echo $CI_COMMIT_SHORT_SHA
    - chmod +x ./ciscripts/get_version.sh
    - ./ciscripts/get_version.sh
  script:
    - flutter build apk --target-platform android-arm,android-arm64,android-x64 --split-per-abi
    - mv ./build/app/outputs/apk/release/*.apk ./release
    - flutter build apk
  after_script:
    - cp build/app/outputs/apk/release/app-release.apk ./release
    - cp build/app/outputs/apk/release/app-release.apk ./app-fatapk.apk
  artifacts:
    paths:
      - release/
      - app-fatapk.apk
    expire_in: 14 days
